#ifndef METRIC_CG_INCLUDE
// Upgrade NOTE: excluded shader from DX11, OpenGL ES 2.0 because it uses unsized arrays
#pragma exclude_renderers d3d11 gles
#define METRIC_CG_INCLUDE
#define METRIC_SIZE 2000

float metric_rmin = 5.000000e-03;
float metric_dr = 1.000000e-02;

static const float metric_lapse[10] = {
    1.054134189619000e-03,
    2.473179182011000e-03,
    4.705940597051000e-03,
    7.093178173488000e-03,
    9.372062547605000e-03,
    1.161648193424000e-02,
    1.393207882297000e-02,
    1.631788710729000e-02,
    1.873018869427000e-02,
    2.115269022001000e-02
};

static const float metric_betar[10] = {
    2.438768707264000e-03,
    7.277997421450000e-03,
    1.207111390038000e-02,
    1.680823094911000e-02,
    2.148762025428000e-02,
    2.610986390803000e-02,
    3.067444573699000e-02,
    3.518017848466000e-02,
    3.962623275581000e-02,
    4.401223845150000e-02
};

static const float metric_grr[10] = {
    1.000000000000000e+06,
    1.000000000000000e+06,
    1.944810000000000e+05,
    5.459375301958000e+04,
    2.151473266270000e+04,
    1.036862516222000e+04,
    5.708741325584000e+03,
    3.454827160494000e+03,
    2.243612037691000e+03,
    1.538769047199000e+03
};

static const float metric_gT[10] = {
    1.000000000000000e+06,
    1.000000000000000e+06,
    1.944810000000000e+05,
    5.459375301958000e+04,
    2.151473266270000e+04,
    1.036862516222000e+04,
    5.708741325584000e+03,
    3.454827160494000e+03,
    2.243612037691000e+03,
    1.538769047199000e+03
};

#endif
